import { useEffect, useState } from "react";
import { collection, getDocs, doc, updateDoc, arrayUnion, deleteDoc } from "firebase/firestore";
import { db } from "../firebase"; // import your Firestore instance
import Head from 'next/head'
import Image from 'next/image'
import Login from '../components/Login'
import { useAuth } from '../context/AuthContext'
import AccessDenied from "../components/AccessDenied";
import Link from "next/link";
import { Button } from "@mui/material";

export default function Home() {
  const { currentUser, isAdmin } = useAuth()
  const [registrationRequests, setRegistrationRequests] = useState([]);

  useEffect(() => {
    const fetchData = async () => {
      const reqCollection = collection(db, "registrationRequests");
      const requestSnapshot = await getDocs(reqCollection);
      setRegistrationRequests(requestSnapshot.docs.map(doc => ({...doc.data(), id: doc.id}))); // Keep document id for later operations
    };

    fetchData();
  }, []);

  const handleAccept = async (req) => {
    const userRef = doc(db, 'users', req.docId); // Assuming 'users' collection and 'studentNumber' as document id
    const reqRef = doc(db, 'registrationRequests', req.id);
    
    await updateDoc(userRef, {
      registeredCourses: arrayUnion(req.requestedCourse)
    });

    await deleteDoc(reqRef);

    setRegistrationRequests(registrationRequests.filter(request => request.id !== req.id));
  };

  const handleDeny = async (req) => {
    const reqRef = doc(db, 'registrationRequests', req.id);
    
    await deleteDoc(reqRef);

    setRegistrationRequests(registrationRequests.filter(request => request.id !== req.id));
  };

  return (
    <>
      <Head>
        <title>Registration Requests</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {!currentUser && <Login />}
      {currentUser && isAdmin &&
        <>
          <table className="table-dark">
            <thead>
              <tr>
                <th>Name</th>
                <th>Student Number</th>
                <th>Requested Course</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody>
              {registrationRequests.map((req, index) => (
                <tr key={index}>
                  <td>{req.name}</td>
                  <td>{req.studentNumber}</td>
                  <td>{req.requestedCourse}</td>
                  <td className="flex">
                    <Button sx={{ mr: 1 }} variant="contained" color="success" onClick={() => handleAccept(req)}>
                      Accept
                    </Button>
                    <Button variant="contained" color="error" onClick={() => handleDeny(req)}>
                     Deny
                    </Button>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </>
      }
      {currentUser && !isAdmin && <AccessDenied />}
    </>
  )
}
